package mysql.锁;

public class 锁 {
    //●介绍
    //锁是计算机协调多个进程或线程并发访问某-资源的机制。 在数据库中，除传统的计算资源(CPU、RAM、I/0) 的争用以外,
    //数据也是一种供许多 用户共享的资源。如何保证数据并发访问的-致性、有效性是所有数据库必须解决的-一个问题,
    //锁冲突也是影响数据库并发访问性能的一-个重要因素。从这个角度来说，锁对数据库而言显得尤其重要，也更加复杂。


    //1.锁是⼀种⽤于保证在[并发]场景下每个事务仍能以⼀致性的⽅式读取和修改数据的⽅式
    //2.当⼀个事务对某⼀条数据上锁之后，其他事务就不能修改或者只能阻塞等待锁的释放
    //3.所以锁的粒度⼤⼩⼀定程度上可以影响到访问数据库的性能

    //●分类
    //MySQL中的锁，按照锁的粒度分,分为以下三类:
    //1.全局锁:锁定数据库中的所有表。
    //2.表级锁:每次操作锁住整张表。
    //3.行级锁:每次操作锁住对应的行数据。

    //➢加锁规则
    //主键索引:
    //  等值条件，命中，    加记录锁；
    //  等值条件，未命中，  加间隙锁；
    //  范围条件，命中，   包含where条件的临键区间，加临键锁；
    //  范围条件，没有命中，加间隙锁；
    //辅助索引:
    //  等值条件，命中，    命中记录的辅助索引项+主键索引项加记录锁，辅助索引项两侧加间隙锁；
    //  等值条件，未命中，  加间隙锁；
    //  范围条件，命中，   包含where条件的临键区间加临键锁。命中记录的id索引项加记录锁；
    //  范围条件，没有命中，加间隙锁；
}
