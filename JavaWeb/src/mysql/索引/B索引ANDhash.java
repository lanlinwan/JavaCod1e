package mysql.索引;

public class B索引ANDhash {
    /*
    按存储结构来划分:
    ●B-Tree索引:B-Tree 结构里每个节点包含了索引值和表记录的信息，数据分布在各个节点之中，
               可以加快访问速度,不需要打3描全表获取数据
    ●B+Tree索引:B-Tree的改进，是MySQL使用的索引存储结构。数据都存储在叶子节点上，在
               叶子节点间增加了顺序访问指针
    ●Hash索引:基于哈希表实现，只有精确匹配索引的所有列查询才有效。对于每行数据，存储引
             擎都会对其计算一个哈希码 (hash code)，并且Hash索引将所有的哈希码存储在索引中，同
             时在索引表中保持指向每个数据行的指针
    ●全文索引:通过建立倒排索引，极大的提升检索效率，解决判断字段是否包含的问题

     */

    //●Hash
    // ➢Hash索引特点
    //  1. Hash索引只 能用于对等比较(=，in)， 不支持范围查询(between, >，<，..
    //  2.无法利用 索引完成排序操作
    //  3. 查询效率高，通常只需要一次检索就可以了，效率通常要高于B+tree索引
    // ➢存储引擎支持
    //  在MySQL中，支持hash索 引的是Memory引擎，而InnoDB中具 有自适应hash功能，
    //  hash索引是存储引擎根据B+Tree索引在指定条件下自动构建的。.
}
