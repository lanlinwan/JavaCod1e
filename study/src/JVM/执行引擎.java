package JVM;

public class  执行引擎 {
    //执行引擎: 将字节码指令 解释/编译为对应平台上的本地机器指令才可以。
    //        简单来说， JVM 中的执行引擎充当了将高级语言翻译为机器语言的译者。
    //   Interpreter解释器: 对字节码采用逐行解释的方式执行，将每条字节码文件中的内容“翻译”为对应平台的本地机器指令执行。
    //   JIT Compiler即时编译器:虚拟机将源代码一次性直接编译成和本地机器平台相关的机器语言，但并不是马上执行。
    //     当JVM发现某个方法或代码块运行特别频繁的时候，就会认为这是“热点代码”（Hot Spot Code)。然后JIT会把部分“热点代码”编译成本地机器相关的机器码
    //     并进行优化，然后再把编译后的机器码缓存起来，以备下次使用。
    //   GC垃圾回收

    //
    //执行引擎执行字节码主要是由解释器+即时编译器搭配进行，这个过程在虚拟机内部进行，基于此，我们常说“Java是半编译半解释型的语言”
}
