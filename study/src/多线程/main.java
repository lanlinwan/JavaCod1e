package 多线程;

public class main {
    public static void main(String[] args) {
        //多线程:
        // 是指从软件或者硬件上实现多个线程并发执行的技术。
        // 具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。

        //线程执行是具有随机性,执行权随时都有可能被其他线程抢走

        //线程是操作系统能够进行运算调度的最小单位。它被包含在进程之中，是进程中的实际运作单位。
        //简单理解:应用软件中互相独立，可以同时运行的功能
        //进程是程序的基本执行h实体

        //并发和并行
        //并发:在同一时刻，有多个指令在单个CPU上交替执行
        //并行:在同一时刻， 有多个指令在多个CPU上同时执行


        //Java线程6种状态:
        //NEW        新建  ---> 创建线程
        //RUNNABLE   可运行--->  start()
        //BLOCKED    阻塞  --->  无法获得锁对象
        //WAITING    等待  --->  wait()
        //TIMED_WAITING 等待(有时限)---> sleep()
        //TERMINATED 终结  --->  全部代码



        //操作系统层面有五种状态: 新建 就绪 阻塞 运行 总结
        //①分到 CPU时间的:运行
        //②可以分到 CPU时间的:就绪
        //③分不到 CPU时间的:阻塞
        //注意Java中的RUNNABLE 涵盖了就绪、运行、阻塞I/O


    }
}
