package SSM.SpringCloud;

public class SpringCloud {
    /*

     什么时候拆分?
    ●创业型项目:先采用单体架构，快速开发,快速试错。随着规模扩大,逐渐拆分。
    ●确定的大型项目:资金充足，目标明确，可以直接选择微服务架构,避免后续拆分的麻烦。

    怎么拆分?
    从拆分目标来说，要做到:
    ●高内聚: 每个微服务的职责要尽量单- - -，包含的业务相互关联度高、完整度高。
    ●低耦合: 每个微服务的功能要相对独立,尽量减少对其它微服务的依赖。

    从拆分方式来说，- 般包含两种方式:
    ●纵向拆分: 按照业务模块来拆分
    ●横向拆分: 抽取公共服务,提高复用性

    springCloud 5大组件:
        注册中心: eureka / Nacos
        网关: Gateway
        远程调用: feign
        负载均衡: Ribbon
        服务熔断: hystrix /sentinel

     */
}
